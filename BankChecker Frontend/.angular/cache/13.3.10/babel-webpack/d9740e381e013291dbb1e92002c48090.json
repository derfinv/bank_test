{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/authentication.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authenticationService) {}\n    intercept(httpRequest, httpHandler) {\n      if (httpRequest.url.includes(environment.apiUrl + \"/user/login\") || httpRequest.url.includes(environment.apiUrl + \"/user/register\")) {\n        return httpHandler.handle(httpRequest);\n      }\n      var token;\n      var request = httpRequest.clone();\n      if (localStorage.getItem(\"token\") != null) {\n        token = localStorage.getItem(\"token\");\n        request = httpRequest.clone({\n          setHeaders: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n      }\n      return httpHandler.handle(request);\n    }\n  }\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}